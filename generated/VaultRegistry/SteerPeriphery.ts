// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SteerPeriphery__algebraVaultDetailsByAddressResultDetailsStruct extends ethereum.Tuple {
  get vaultType(): string {
    return this[0].toString();
  }

  get token0(): Address {
    return this[1].toAddress();
  }

  get token1(): Address {
    return this[2].toAddress();
  }

  get name(): string {
    return this[3].toString();
  }

  get symbol(): string {
    return this[4].toString();
  }

  get decimals(): BigInt {
    return this[5].toBigInt();
  }

  get token0Name(): string {
    return this[6].toString();
  }

  get token1Name(): string {
    return this[7].toString();
  }

  get token0Symbol(): string {
    return this[8].toString();
  }

  get token1Symbol(): string {
    return this[9].toString();
  }

  get token0Decimals(): BigInt {
    return this[10].toBigInt();
  }

  get token1Decimals(): BigInt {
    return this[11].toBigInt();
  }

  get totalLPTokensIssued(): BigInt {
    return this[12].toBigInt();
  }

  get token0Balance(): BigInt {
    return this[13].toBigInt();
  }

  get token1Balance(): BigInt {
    return this[14].toBigInt();
  }

  get vaultCreator(): Address {
    return this[15].toAddress();
  }
}

export class SteerPeriphery__strategiesByCreatorResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get name(): string {
    return this[1].toString();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get execBundle(): string {
    return this[3].toString();
  }

  get maxGasCost(): BigInt {
    return this[4].toBigInt();
  }

  get maxGasPerAction(): BigInt {
    return this[5].toBigInt();
  }
}

export class SteerPeriphery__vaultBalancesByAddressWithFeesResultBalancesStruct extends ethereum.Tuple {
  get amountToken0(): BigInt {
    return this[0].toBigInt();
  }

  get amountToken1(): BigInt {
    return this[1].toBigInt();
  }
}

export class SteerPeriphery__vaultDetailsByAddressResultDetailsStruct extends ethereum.Tuple {
  get vaultType(): string {
    return this[0].toString();
  }

  get token0(): Address {
    return this[1].toAddress();
  }

  get token1(): Address {
    return this[2].toAddress();
  }

  get name(): string {
    return this[3].toString();
  }

  get symbol(): string {
    return this[4].toString();
  }

  get decimals(): BigInt {
    return this[5].toBigInt();
  }

  get token0Name(): string {
    return this[6].toString();
  }

  get token1Name(): string {
    return this[7].toString();
  }

  get token0Symbol(): string {
    return this[8].toString();
  }

  get token1Symbol(): string {
    return this[9].toString();
  }

  get token0Decimals(): BigInt {
    return this[10].toBigInt();
  }

  get token1Decimals(): BigInt {
    return this[11].toBigInt();
  }

  get feeTier(): BigInt {
    return this[12].toBigInt();
  }

  get totalLPTokensIssued(): BigInt {
    return this[13].toBigInt();
  }

  get token0Balance(): BigInt {
    return this[14].toBigInt();
  }

  get token1Balance(): BigInt {
    return this[15].toBigInt();
  }

  get vaultCreator(): Address {
    return this[16].toAddress();
  }
}

export class SteerPeriphery__vaultsByStrategyResultValue0Struct extends ethereum.Tuple {
  get state(): i32 {
    return this[0].toI32();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get vaultID(): BigInt {
    return this[2].toBigInt();
  }

  get payloadIpfs(): string {
    return this[3].toString();
  }

  get vaultAddress(): Address {
    return this[4].toAddress();
  }

  get beaconName(): string {
    return this[5].toString();
  }
}

export class SteerPeriphery extends ethereum.SmartContract {
  static bind(address: Address): SteerPeriphery {
    return new SteerPeriphery("SteerPeriphery", address);
  }

  algebraVaultDetailsByAddress(
    vault: Address
  ): SteerPeriphery__algebraVaultDetailsByAddressResultDetailsStruct {
    let result = super.call(
      "algebraVaultDetailsByAddress",
      "algebraVaultDetailsByAddress(address):((string,address,address,string,string,uint256,string,string,string,string,uint256,uint256,uint256,uint256,uint256,address))",
      [ethereum.Value.fromAddress(vault)]
    );

    return changetype<
      SteerPeriphery__algebraVaultDetailsByAddressResultDetailsStruct
    >(result[0].toTuple());
  }

  try_algebraVaultDetailsByAddress(
    vault: Address
  ): ethereum.CallResult<
    SteerPeriphery__algebraVaultDetailsByAddressResultDetailsStruct
  > {
    let result = super.tryCall(
      "algebraVaultDetailsByAddress",
      "algebraVaultDetailsByAddress(address):((string,address,address,string,string,uint256,string,string,string,string,uint256,uint256,uint256,uint256,uint256,address))",
      [ethereum.Value.fromAddress(vault)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<
        SteerPeriphery__algebraVaultDetailsByAddressResultDetailsStruct
      >(value[0].toTuple())
    );
  }

  nodeConfig(): string {
    let result = super.call("nodeConfig", "nodeConfig():(string)", []);

    return result[0].toString();
  }

  try_nodeConfig(): ethereum.CallResult<string> {
    let result = super.tryCall("nodeConfig", "nodeConfig():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  strategiesByCreator(
    creator: Address
  ): Array<SteerPeriphery__strategiesByCreatorResultValue0Struct> {
    let result = super.call(
      "strategiesByCreator",
      "strategiesByCreator(address):((uint256,string,address,string,uint128,uint128)[])",
      [ethereum.Value.fromAddress(creator)]
    );

    return result[0].toTupleArray<
      SteerPeriphery__strategiesByCreatorResultValue0Struct
    >();
  }

  try_strategiesByCreator(
    creator: Address
  ): ethereum.CallResult<
    Array<SteerPeriphery__strategiesByCreatorResultValue0Struct>
  > {
    let result = super.tryCall(
      "strategiesByCreator",
      "strategiesByCreator(address):((uint256,string,address,string,uint128,uint128)[])",
      [ethereum.Value.fromAddress(creator)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        SteerPeriphery__strategiesByCreatorResultValue0Struct
      >()
    );
  }

  vaultBalancesByAddressWithFees(
    vault: Address
  ): SteerPeriphery__vaultBalancesByAddressWithFeesResultBalancesStruct {
    let result = super.call(
      "vaultBalancesByAddressWithFees",
      "vaultBalancesByAddressWithFees(address):((uint256,uint256))",
      [ethereum.Value.fromAddress(vault)]
    );

    return changetype<
      SteerPeriphery__vaultBalancesByAddressWithFeesResultBalancesStruct
    >(result[0].toTuple());
  }

  try_vaultBalancesByAddressWithFees(
    vault: Address
  ): ethereum.CallResult<
    SteerPeriphery__vaultBalancesByAddressWithFeesResultBalancesStruct
  > {
    let result = super.tryCall(
      "vaultBalancesByAddressWithFees",
      "vaultBalancesByAddressWithFees(address):((uint256,uint256))",
      [ethereum.Value.fromAddress(vault)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<
        SteerPeriphery__vaultBalancesByAddressWithFeesResultBalancesStruct
      >(value[0].toTuple())
    );
  }

  vaultDetailsByAddress(
    vault: Address
  ): SteerPeriphery__vaultDetailsByAddressResultDetailsStruct {
    let result = super.call(
      "vaultDetailsByAddress",
      "vaultDetailsByAddress(address):((string,address,address,string,string,uint256,string,string,string,string,uint256,uint256,uint256,uint256,uint256,uint256,address))",
      [ethereum.Value.fromAddress(vault)]
    );

    return changetype<SteerPeriphery__vaultDetailsByAddressResultDetailsStruct>(
      result[0].toTuple()
    );
  }

  try_vaultDetailsByAddress(
    vault: Address
  ): ethereum.CallResult<
    SteerPeriphery__vaultDetailsByAddressResultDetailsStruct
  > {
    let result = super.tryCall(
      "vaultDetailsByAddress",
      "vaultDetailsByAddress(address):((string,address,address,string,string,uint256,string,string,string,string,uint256,uint256,uint256,uint256,uint256,uint256,address))",
      [ethereum.Value.fromAddress(vault)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<SteerPeriphery__vaultDetailsByAddressResultDetailsStruct>(
        value[0].toTuple()
      )
    );
  }

  vaultsByStrategy(
    strategyId: BigInt
  ): Array<SteerPeriphery__vaultsByStrategyResultValue0Struct> {
    let result = super.call(
      "vaultsByStrategy",
      "vaultsByStrategy(uint256):((uint8,uint256,uint256,string,address,string)[])",
      [ethereum.Value.fromUnsignedBigInt(strategyId)]
    );

    return result[0].toTupleArray<
      SteerPeriphery__vaultsByStrategyResultValue0Struct
    >();
  }

  try_vaultsByStrategy(
    strategyId: BigInt
  ): ethereum.CallResult<
    Array<SteerPeriphery__vaultsByStrategyResultValue0Struct>
  > {
    let result = super.tryCall(
      "vaultsByStrategy",
      "vaultsByStrategy(uint256):((uint8,uint256,uint256,string,address,string)[])",
      [ethereum.Value.fromUnsignedBigInt(strategyId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        SteerPeriphery__vaultsByStrategyResultValue0Struct
      >()
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateVaultAndDepositGasCall extends ethereum.Call {
  get inputs(): CreateVaultAndDepositGasCall__Inputs {
    return new CreateVaultAndDepositGasCall__Inputs(this);
  }

  get outputs(): CreateVaultAndDepositGasCall__Outputs {
    return new CreateVaultAndDepositGasCall__Outputs(this);
  }
}

export class CreateVaultAndDepositGasCall__Inputs {
  _call: CreateVaultAndDepositGasCall;

  constructor(call: CreateVaultAndDepositGasCall) {
    this._call = call;
  }

  get cvdgParams(): CreateVaultAndDepositGasCallCvdgParamsStruct {
    return changetype<CreateVaultAndDepositGasCallCvdgParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreateVaultAndDepositGasCall__Outputs {
  _call: CreateVaultAndDepositGasCall;

  constructor(call: CreateVaultAndDepositGasCall) {
    this._call = call;
  }

  get newVault(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateVaultAndDepositGasCallCvdgParamsStruct extends ethereum.Tuple {
  get tokenId(): BigInt {
    return this[0].toBigInt();
  }

  get params(): Bytes {
    return this[1].toBytes();
  }

  get beaconName(): string {
    return this[2].toString();
  }

  get vaultManager(): Address {
    return this[3].toAddress();
  }

  get payloadIpfs(): string {
    return this[4].toString();
  }
}

export class CreateVaultAndStrategyCall extends ethereum.Call {
  get inputs(): CreateVaultAndStrategyCall__Inputs {
    return new CreateVaultAndStrategyCall__Inputs(this);
  }

  get outputs(): CreateVaultAndStrategyCall__Outputs {
    return new CreateVaultAndStrategyCall__Outputs(this);
  }
}

export class CreateVaultAndStrategyCall__Inputs {
  _call: CreateVaultAndStrategyCall;

  constructor(call: CreateVaultAndStrategyCall) {
    this._call = call;
  }

  get cvsParams(): CreateVaultAndStrategyCallCvsParamsStruct {
    return changetype<CreateVaultAndStrategyCallCvsParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreateVaultAndStrategyCall__Outputs {
  _call: CreateVaultAndStrategyCall;

  constructor(call: CreateVaultAndStrategyCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get newVault(): Address {
    return this._call.outputValues[1].value.toAddress();
  }
}

export class CreateVaultAndStrategyCallCvsParamsStruct extends ethereum.Tuple {
  get strategyCreator(): Address {
    return this[0].toAddress();
  }

  get name(): string {
    return this[1].toString();
  }

  get execBundle(): string {
    return this[2].toString();
  }

  get maxGasCost(): BigInt {
    return this[3].toBigInt();
  }

  get maxGasPerAction(): BigInt {
    return this[4].toBigInt();
  }

  get params(): Bytes {
    return this[5].toBytes();
  }

  get beaconName(): string {
    return this[6].toString();
  }

  get vaultManager(): Address {
    return this[7].toAddress();
  }

  get payloadIpfs(): string {
    return this[8].toString();
  }
}

export class CreateVaultStrategyAndRegisterJobCall extends ethereum.Call {
  get inputs(): CreateVaultStrategyAndRegisterJobCall__Inputs {
    return new CreateVaultStrategyAndRegisterJobCall__Inputs(this);
  }

  get outputs(): CreateVaultStrategyAndRegisterJobCall__Outputs {
    return new CreateVaultStrategyAndRegisterJobCall__Outputs(this);
  }
}

export class CreateVaultStrategyAndRegisterJobCall__Inputs {
  _call: CreateVaultStrategyAndRegisterJobCall;

  constructor(call: CreateVaultStrategyAndRegisterJobCall) {
    this._call = call;
  }

  get cvsrjParams(): CreateVaultStrategyAndRegisterJobCallCvsrjParamsStruct {
    return changetype<CreateVaultStrategyAndRegisterJobCallCvsrjParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CreateVaultStrategyAndRegisterJobCall__Outputs {
  _call: CreateVaultStrategyAndRegisterJobCall;

  constructor(call: CreateVaultStrategyAndRegisterJobCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get newVault(): Address {
    return this._call.outputValues[1].value.toAddress();
  }
}

export class CreateVaultStrategyAndRegisterJobCallCvsrjParamsStruct extends ethereum.Tuple {
  get strategyCreator(): Address {
    return this[0].toAddress();
  }

  get name(): string {
    return this[1].toString();
  }

  get execBundle(): string {
    return this[2].toString();
  }

  get maxGasCost(): BigInt {
    return this[3].toBigInt();
  }

  get maxGasPerAction(): BigInt {
    return this[4].toBigInt();
  }

  get jobInitParams(): Bytes {
    return this[5].toBytes();
  }

  get beaconName(): string {
    return this[6].toString();
  }

  get vaultManager(): Address {
    return this[7].toAddress();
  }

  get payloadIpfs(): string {
    return this[8].toString();
  }

  get userProvidedData(): Array<Bytes> {
    return this[9].toBytesArray();
  }

  get targetAddresses(): Array<Address> {
    return this[10].toAddressArray();
  }

  get jobName(): string {
    return this[11].toString();
  }

  get ipfsForJobDetails(): string {
    return this[12].toString();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get vaultAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount0Desired(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount1Desired(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount0Min(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get amount1Min(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositAndStakeCall extends ethereum.Call {
  get inputs(): DepositAndStakeCall__Inputs {
    return new DepositAndStakeCall__Inputs(this);
  }

  get outputs(): DepositAndStakeCall__Outputs {
    return new DepositAndStakeCall__Outputs(this);
  }
}

export class DepositAndStakeCall__Inputs {
  _call: DepositAndStakeCall;

  constructor(call: DepositAndStakeCall) {
    this._call = call;
  }

  get vaultAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount0Desired(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount1Desired(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount0Min(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get amount1Min(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get poolId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class DepositAndStakeCall__Outputs {
  _call: DepositAndStakeCall;

  constructor(call: DepositAndStakeCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _strategyRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _vaultRegistry(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _gasVault(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _stakingRewards(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _nodeConfig(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetNodeConfigCall extends ethereum.Call {
  get inputs(): SetNodeConfigCall__Inputs {
    return new SetNodeConfigCall__Inputs(this);
  }

  get outputs(): SetNodeConfigCall__Outputs {
    return new SetNodeConfigCall__Outputs(this);
  }
}

export class SetNodeConfigCall__Inputs {
  _call: SetNodeConfigCall;

  constructor(call: SetNodeConfigCall) {
    this._call = call;
  }

  get _nodeConfig(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetNodeConfigCall__Outputs {
  _call: SetNodeConfigCall;

  constructor(call: SetNodeConfigCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class VaultBalancesByAddressWithFeesCall extends ethereum.Call {
  get inputs(): VaultBalancesByAddressWithFeesCall__Inputs {
    return new VaultBalancesByAddressWithFeesCall__Inputs(this);
  }

  get outputs(): VaultBalancesByAddressWithFeesCall__Outputs {
    return new VaultBalancesByAddressWithFeesCall__Outputs(this);
  }
}

export class VaultBalancesByAddressWithFeesCall__Inputs {
  _call: VaultBalancesByAddressWithFeesCall;

  constructor(call: VaultBalancesByAddressWithFeesCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class VaultBalancesByAddressWithFeesCall__Outputs {
  _call: VaultBalancesByAddressWithFeesCall;

  constructor(call: VaultBalancesByAddressWithFeesCall) {
    this._call = call;
  }

  get balances(): VaultBalancesByAddressWithFeesCallBalancesStruct {
    return changetype<VaultBalancesByAddressWithFeesCallBalancesStruct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class VaultBalancesByAddressWithFeesCallBalancesStruct extends ethereum.Tuple {
  get amountToken0(): BigInt {
    return this[0].toBigInt();
  }

  get amountToken1(): BigInt {
    return this[1].toBigInt();
  }
}
