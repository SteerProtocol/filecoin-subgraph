// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ManagerAdded extends ethereum.Event {
  get params(): ManagerAdded__Params {
    return new ManagerAdded__Params(this);
  }
}

export class ManagerAdded__Params {
  _event: ManagerAdded;

  constructor(event: ManagerAdded) {
    this._event = event;
  }

  get vaultAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get manager(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PermissionsAdded extends ethereum.Event {
  get params(): PermissionsAdded__Params {
    return new PermissionsAdded__Params(this);
  }
}

export class PermissionsAdded__Params {
  _event: PermissionsAdded;

  constructor(event: PermissionsAdded) {
    this._event = event;
  }

  get whitelistManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vault(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get addressesAdded(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }
}

export class PermissionsRemoved extends ethereum.Event {
  get params(): PermissionsRemoved__Params {
    return new PermissionsRemoved__Params(this);
  }
}

export class PermissionsRemoved__Params {
  _event: PermissionsRemoved;

  constructor(event: PermissionsRemoved) {
    this._event = event;
  }

  get whitelistManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vault(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get addressesRemoved(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }
}

export class WhitelistRegistry extends ethereum.SmartContract {
  static bind(address: Address): WhitelistRegistry {
    return new WhitelistRegistry("WhitelistRegistry", address);
  }

  permissions(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "permissions",
      "permissions(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_permissions(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "permissions",
      "permissions(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  whitelistManagers(param0: Address): Address {
    let result = super.call(
      "whitelistManagers",
      "whitelistManagers(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_whitelistManagers(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "whitelistManagers",
      "whitelistManagers(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddPermissionsCall extends ethereum.Call {
  get inputs(): AddPermissionsCall__Inputs {
    return new AddPermissionsCall__Inputs(this);
  }

  get outputs(): AddPermissionsCall__Outputs {
    return new AddPermissionsCall__Outputs(this);
  }
}

export class AddPermissionsCall__Inputs {
  _call: AddPermissionsCall;

  constructor(call: AddPermissionsCall) {
    this._call = call;
  }

  get _vaultAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _addresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class AddPermissionsCall__Outputs {
  _call: AddPermissionsCall;

  constructor(call: AddPermissionsCall) {
    this._call = call;
  }
}

export class RegisterWhitelistManagerCall extends ethereum.Call {
  get inputs(): RegisterWhitelistManagerCall__Inputs {
    return new RegisterWhitelistManagerCall__Inputs(this);
  }

  get outputs(): RegisterWhitelistManagerCall__Outputs {
    return new RegisterWhitelistManagerCall__Outputs(this);
  }
}

export class RegisterWhitelistManagerCall__Inputs {
  _call: RegisterWhitelistManagerCall;

  constructor(call: RegisterWhitelistManagerCall) {
    this._call = call;
  }

  get manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RegisterWhitelistManagerCall__Outputs {
  _call: RegisterWhitelistManagerCall;

  constructor(call: RegisterWhitelistManagerCall) {
    this._call = call;
  }
}

export class RevokePermissionsCall extends ethereum.Call {
  get inputs(): RevokePermissionsCall__Inputs {
    return new RevokePermissionsCall__Inputs(this);
  }

  get outputs(): RevokePermissionsCall__Outputs {
    return new RevokePermissionsCall__Outputs(this);
  }
}

export class RevokePermissionsCall__Inputs {
  _call: RevokePermissionsCall;

  constructor(call: RevokePermissionsCall) {
    this._call = call;
  }

  get _vaultAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _addresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class RevokePermissionsCall__Outputs {
  _call: RevokePermissionsCall;

  constructor(call: RevokePermissionsCall) {
    this._call = call;
  }
}
